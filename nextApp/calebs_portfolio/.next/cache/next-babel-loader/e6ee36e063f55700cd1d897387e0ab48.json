{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport 'p5';\nimport p5 from \"p5\";\nimport Data from './output';\n\nvar Galaxy = /*#__PURE__*/function (_React$Component) {\n  _inherits(Galaxy, _React$Component);\n\n  var _super = _createSuper(Galaxy);\n\n  function Galaxy(props) {\n    var _this;\n\n    _classCallCheck(this, Galaxy);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResize\", function (e) {\n      _this.state.sketch.resizeCanvas(window.innerWidth, window.innerHeight, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"galaxy\", function (sketch) {\n      _this.state.sketch = sketch;\n\n      sketch.setup = function () {\n        sketch.createCanvas(window.innerWidth, window.innerHeight);\n        sketch.background(0);\n        sketch.fullscreen();\n        sketch.stroke('white');\n        sketch.strokeWeight(10);\n      };\n\n      sketch.draw = function () {\n        sketch.background(0);\n        var arr = Data[parseInt(Date.now() / 70) % 313];\n\n        for (var i = 0; i < arr.length; i++) {\n          sketch.stroke(Math.abs(Date.now() / 30 % 350 - 175), 0, 125 + 130 * arr[i][1]);\n          var x = arr[i][0] * window.innerWidth * 1.5;\n          sketch.point(x, arr[i][2] * window.innerHeight);\n\n          if (Math.pow(Math.abs(x - sketch.mouseX), 2) + Math.pow(Math.abs(arr[i][2] * window.innerHeight - sketch.mouseY), 2) <= 10000) {\n            console.log(\"HEY\");\n            sketch.strokeWeight(1);\n            sketch.line(x, arr[i][2] * window.innerHeight, sketch.mouseX, sketch.mouseY);\n            sketch.strokeWeight(10);\n          }\n        }\n      };\n    });\n\n    _this.sketchRef = React.createRef();\n    _this.state = {\n      sketch: undefined\n    };\n    console.log(\"WHAAAT\");\n    console.log(Data);\n    return _this;\n  }\n\n  _createClass(Galaxy, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.sketch_export = new p5(this.galaxy, this.sketchRef.current);\n      window.addEventListener(\"resize\", this.handleResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: -1,\n          top: 0,\n          marginBottom: '-20px'\n        },\n        ref: this.sketchRef\n      });\n    }\n  }]);\n\n  return Galaxy;\n}(React.Component);\n\nexport default Galaxy;","map":null,"metadata":{},"sourceType":"module"}