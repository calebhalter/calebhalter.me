{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { timers } from 'jquery';\nimport React from 'react';\nimport { Spring, animated, config, interpolate } from 'react-spring/renderprops.cjs';\n\nclass GalleryItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClick\", (link = undefined, open = true) => {\n      this.props.closeAll();\n      if (open && this.state.expand) return;\n      this.setState(() => ({\n        expand: open\n      }));\n      if (link !== undefined) location.href = '#' + link;\n    });\n\n    _defineProperty(this, \"handleResize\", () => {\n      console.log('resize');\n      this.setState(state => ({\n        expand: state.expand\n      }));\n    });\n\n    _defineProperty(this, \"x_out\", () => {\n      this.setState(() => ({\n        expand: false\n      }));\n      let inputs = document.getElementsByTagName('input');\n\n      for (let j = 0; j < inputs.length; j++) {\n        if (inputs[j].type == \"text\") inputs[j].value = \"\";\n      }\n    });\n\n    this.state = {\n      expand: false,\n      width: 0,\n      height: 0\n    };\n  }\n\n  componentDidMount() {\n    this.state.width = window.innerWidth;\n    this.state.height = window.innerHeight;\n    this.state.render = true;\n    this.setState(state => ({\n      expand: false\n    }));\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Spring, {\n      config: config.slow,\n      toggle: this.state.expand,\n      from: {\n        opacity: 0,\n        width: 'inherit'\n      },\n      to: {\n        opacity: this.state.expand ? 1 : 0,\n        position: this.state.expand ? 'relative' : 'relative',\n        width: this.state.expand ? this.state.width : this.state.width / 2,\n        margin: this.state.expand ? '0px' : '25px',\n        height: this.state.expand ? this.state.height : 'inherit',\n        backgroundColor: this.state.expand ? 'rgba(255, 255, 255, 1)' : 'rgba(255, 255, 255, 0.83)',\n        appDisplay: this.state.expand ? 'unset' : 'none',\n        xDisplay: this.state.expand ? 'unset' : 'none'\n      }\n    }, ({\n      opacity,\n      position,\n      margin,\n      height,\n      width,\n      appDisplay,\n      xDisplay\n    }) => __jsx(animated.div, {\n      onClick: () => this.handleClick(this.props.title),\n      id: this.props.title,\n      style: {\n        width,\n        height,\n        position,\n        margin\n        /*position,*/\n\n        /*margin*/\n\n      },\n      className: \"jumbotron gallery-piece\"\n    }, __jsx(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      onClick: () => this.handleClick(undefined, false),\n      width: \"32\",\n      height: \"32\",\n      fill: \"currentColor\",\n      className: \"bi bi-x\",\n      viewBox: \"0 0 16 16\",\n      style: {\n        float: 'right',\n        display: xDisplay\n      }\n    }, __jsx(\"path\", {\n      d: \"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"\n    }), \"                                \"), __jsx(\"h1\", null, this.props.title), __jsx(\"p\", null, this.props.description), __jsx(\"div\", {\n      style: {\n        display: appDisplay\n      }\n    }, this.props.element))));\n  }\n\n}\n\nexport default GalleryItem;","map":{"version":3,"sources":["/Users/calebhalter/Documents/Portfolio/nextApp/calebs_portfolio/components/layout/gallery-item.js"],"names":["timers","React","Spring","animated","config","interpolate","GalleryItem","Component","constructor","props","link","undefined","open","closeAll","state","expand","setState","location","href","console","log","inputs","document","getElementsByTagName","j","length","type","value","width","height","componentDidMount","window","innerWidth","innerHeight","render","addEventListener","handleResize","slow","opacity","position","margin","backgroundColor","appDisplay","xDisplay","handleClick","title","float","display","description","element"],"mappings":"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","sourcesContent":["import { timers } from 'jquery';\nimport React from 'react'\nimport { Spring, animated, config, interpolate } from 'react-spring/renderprops.cjs'\n\nclass GalleryItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: false,\n            width: 0,\n            height: 0        }\n    }\n\n    handleClick = (link=undefined, open=true) => {\n        this.props.closeAll();\n        if (open && this.state.expand)\n            return;\n        this.setState(() => ({\n            expand: open\n        }));\n        if (link !== undefined)\n            location.href = '#' + link\n    }\n\n    handleResize = () => {\n        console.log('resize')\n        this.setState(state => ({\n            expand: state.expand\n        }))\n    }\n\n    componentDidMount() {\n        this.state.width = window.innerWidth;\n        this.state.height = window.innerHeight;\n        this.state.render = true;\n        this.setState(state => ({\n            expand: false\n        }));\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    x_out = () => {\n        this.setState(() => ({\n            expand: false\n        }))\n        let inputs = document.getElementsByTagName('input');\n        for (let j=0; j < inputs.length; j++) {\n            if (inputs[j].type == \"text\")\n                inputs[j].value = \"\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Spring\n                    config={config.slow}\n                    toggle={this.state.expand}\n                    from={{opacity: 0, width: 'inherit'}}\n                    to={{ \n                        opacity: this.state.expand ? 1 : 0, \n                        position: this.state.expand ? 'relative': 'relative', \n                        width: this.state.expand ? this.state.width : this.state.width / 2, \n                        margin: this.state.expand ? '0px' : '25px', \n                        height: this.state.expand ? this.state.height : 'inherit',\n                        backgroundColor: this.state.expand ? 'rgba(255, 255, 255, 1)' : 'rgba(255, 255, 255, 0.83)',\n                        appDisplay: this.state.expand ? 'unset' : 'none',\n                        xDisplay: this.state.expand ? 'unset' : 'none'\n                    }}>\n                        {({ opacity, position, margin, height, width, appDisplay, xDisplay }) => \n                            <animated.div onClick={() => this.handleClick(this.props.title)} id={this.props.title} \n                                style={{\n                                    width,\n                                    height,\n                                    position,\n                                    margin,\n                                    /*position,*/\n                                    /*margin*/\n                                }} className=\"jumbotron gallery-piece\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={() => this.handleClick(undefined, false)} width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-x\" viewBox=\"0 0 16 16\" style={{float: 'right', display: xDisplay}}>\n                                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>                                </svg>\n                                <h1>{this.props.title}</h1>\n                                <p>{this.props.description}</p>\n                                <div style={{display: appDisplay}}>{this.props.element}</div>\n                            </animated.div>\n                    }\n\n                </Spring>\n            </div>\n        )\n    }\n}\n\nexport default GalleryItem;"]},"metadata":{},"sourceType":"module"}