{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport 'p5';\nimport p5 from \"p5\";\nimport Data from './output';\n\nclass Galaxy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleResize\", e => {\n      this.state.sketch.resizeCanvas(window.innerWidth, window.innerHeight, false);\n    });\n\n    _defineProperty(this, \"galaxy\", sketch => {\n      this.state.sketch = sketch;\n\n      sketch.setup = () => {\n        sketch.createCanvas(window.innerWidth, window.innerHeight);\n        sketch.background(0);\n        sketch.fullscreen();\n        sketch.stroke('white');\n        sketch.strokeWeight(10);\n      };\n\n      sketch.draw = () => {\n        sketch.background(0);\n        let arr = Data[parseInt(Date.now() / 70) % 313];\n\n        for (let i = 0; i < arr.length; i++) {\n          sketch.stroke(Math.abs(Date.now() / 30 % 350 - 175), 0, 125 + 130 * arr[i][1]);\n          let x = arr[i][0] * window.innerWidth * 1.5;\n          sketch.point(x, arr[i][2] * window.innerHeight);\n\n          if (Math.abs(x - sketch.mouseX) ** 2 + Math.abs(arr[i][2] * window.innerHeight - sketch.mouseY) ** 2 <= 10000) {\n            console.log(\"HEY\");\n            sketch.strokeWeight(1);\n            sketch.line(x, arr[i][2] * window.innerHeight, sketch.mouseX, sketch.mouseY);\n            sketch.strokeWeight(10);\n          }\n        }\n      };\n    });\n\n    this.sketchRef = React.createRef();\n    this.state = {\n      sketch: undefined\n    };\n    console.log(\"WHAAAT\");\n    console.log(Data);\n  }\n\n  componentDidMount() {\n    this.sketch_export = new p5(this.galaxy, this.sketchRef.current);\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        position: 'fixed',\n        zIndex: -1,\n        top: 0,\n        marginBottom: '-20px'\n      },\n      ref: this.sketchRef\n    });\n  }\n\n}\n\nexport default Galaxy;","map":null,"metadata":{},"sourceType":"module"}