{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport 'p5';\nimport p5 from \"p5\";\nimport Data from './output';\n\nclass Galaxy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleResize\", e => {\n      this.state.sketch.resizeCanvas(window.innerWidth, window.innerHeight, false);\n    });\n\n    _defineProperty(this, \"galaxy\", sketch => {\n      this.state.sketch = sketch;\n\n      sketch.setup = () => {\n        sketch.createCanvas(window.innerWidth, window.innerHeight);\n        sketch.background(0);\n        sketch.fullscreen();\n        sketch.stroke('white');\n        sketch.strokeWeight(10);\n      };\n\n      sketch.draw = () => {\n        sketch.background(0);\n        let arr = Data[parseInt(Date.now() / 50) % 313];\n\n        for (let i = 0; i < arr.length; i++) {\n          sketch.stroke(125 + 130 * arr[i][1], 0, 125 + 130 * arr[i][1]);\n          sketch.point(arr[i][0] * window.innerWidth, arr[i][2] * window.innerHeight);\n\n          if (Math.abs(arr[i][0] * window.innerWidth - sketch.mouseX) ** 2 + Math.abs(arr[i][2] * window.innerHeight - sketch.mouseY) ** 2 <= 10000) {\n            console.log(\"HEY\");\n            sketch.strokeWeight(1);\n            sketch.line(arr[i][0] * window.innerWidth, arr[i][2] * window.innerHeight, sketch.mouseX, sketch.mouseY);\n            sketch.strokeWeight(10);\n          }\n        }\n      };\n    });\n\n    this.sketchRef = React.createRef();\n    this.state = {\n      sketch: undefined\n    };\n    console.log(\"WHAAAT\");\n    console.log(Data);\n  }\n\n  componentDidMount() {\n    this.sketch_export = new p5(this.galaxy, this.sketchRef.current);\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        position: this.props.position,\n        zIndex: 0,\n        top: 0,\n        marginBottom: '-20px'\n      },\n      ref: this.sketchRef\n    });\n  }\n\n}\n\nexport default Galaxy;","map":{"version":3,"sources":["/Users/calebhalter/Documents/Portfolio/nextApp/calebs_portfolio/components/visuals/galaxy.js"],"names":["React","p5","Data","Galaxy","Component","constructor","props","e","state","sketch","resizeCanvas","window","innerWidth","innerHeight","setup","createCanvas","background","fullscreen","stroke","strokeWeight","draw","arr","parseInt","Date","now","i","length","point","Math","abs","mouseX","mouseY","console","log","line","sketchRef","createRef","undefined","componentDidMount","sketch_export","galaxy","current","addEventListener","handleResize","render","position","zIndex","top","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'p5'\nimport p5 from \"p5\";\nimport Data from './output'\n\nclass Galaxy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sketchRef = React.createRef()\n    this.state = {\n      sketch: undefined,\n    }\n    console.log(\"WHAAAT\")\n    console.log(Data)\n  }\n  handleResize = (e) => {\n    this.state.sketch.resizeCanvas(window.innerWidth, window.innerHeight, false)\n   };\n\n  galaxy = (sketch) => {\n    this.state.sketch = sketch;\n    sketch.setup = () => {\n      sketch.createCanvas(window.innerWidth, window.innerHeight);\n      sketch.background(0);\n      sketch.fullscreen();\n      sketch.stroke('white')\n      sketch.strokeWeight(10);\n    }\n\n    sketch.draw = () => {\n        sketch.background(0)\n      let arr = Data[parseInt(Date.now() / 50) % 313]\n      for (let i=0; i < arr.length; i++) {\n          sketch.stroke(125 + 130 * (arr[i][1]), 0, 125 + 130 * (arr[i][1]))\n          sketch.point(arr[i][0] * window.innerWidth, arr[i][2] * window.innerHeight)\n          if (Math.abs(arr[i][0] * window.innerWidth - sketch.mouseX) ** 2 + Math.abs(arr[i][2] * window.innerHeight - sketch.mouseY) ** 2 <= 10000) {\n            console.log(\"HEY\")\n            sketch.strokeWeight(1);\n            sketch.line(arr[i][0] * window.innerWidth, arr[i][2] * window.innerHeight, sketch.mouseX, sketch.mouseY);\n            sketch.strokeWeight(10);\n          }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.sketch_export =  new p5(this.galaxy, this.sketchRef.current);\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  render() {\n    return <div style={{position:this.props.position, zIndex: 0, top: 0, marginBottom: '-20px'}} ref={this.sketchRef}></div>;\n  }\n\n}\n\nexport default Galaxy;"]},"metadata":{},"sourceType":"module"}